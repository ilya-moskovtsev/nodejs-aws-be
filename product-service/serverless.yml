# NOTE: update this with your service name
service: product-service

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  profile: iam_admin_user
  stage: dev
  region: us-east-1
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  environment:
    PG_HOST: ${env:PG_HOST}
    PG_PORT: ${env:PG_PORT}
    PG_DATABASE: ${env:PG_DATABASE}
    PG_USERNAME: ${env:PG_USERNAME}
    PG_PASSWORD: ${env:PG_PASSWORD}
    SNS_TOPIC_ARN: ${self:custom.SNS_TOPIC_ARN}

  iamRoleStatements:
    - Effect: "Allow"
      Action: "sns:*"
      Resource: ${self:custom.SNS_TOPIC_ARN}

resources:
  Resources:
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: SNS Topic
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn: ${self:custom.SNS_TOPIC_ARN}
        Endpoint: ${env:SNS_SUBSCRIPTION_ENDPOINT_EMAIL}
    SNSSubscriptionWithFilter:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn: ${self:custom.SNS_TOPIC_ARN}
        Endpoint: ${env:SNS_SUBSCRIPTION_ENDPOINT_EMAIL_WITH_FILTER}
        FilterPolicy:
          count:
            - 1

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: products/{id}
          method: get
          cors: true
  addProduct:
    handler: handler.addProduct
    events:
      - http:
          path: products
          method: post
          cors: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn: ${self:custom.SQS_ARN}

custom:
  bundle:
    linting: false
    ignorePackages:
      - pg-native
  SNS_TOPIC_ARN:
    Ref: SNSTopic
  SQS_ARN: ${cf:import-service-${self:provider.stage}.sqsArn}